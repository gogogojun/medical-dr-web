name: Deploy Frontend to S3

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::<ACCOUNT_ID>:role/<GHA_OIDC_ROLE>
          aws-region: ap-northeast-2

      - name: Unzip if needed
        run: |
          mkdir -p out
          if ls *.zip >/dev/null 2>&1; then unzip -qo *.zip -d out; else cp -r . out; fi

      - name: Create config.js
        run: |
          echo "window.API_BASE_URL = \"${{ secrets.API_BASE_URL }}\";" > out/config.js

      - name: Upload HTML & config.js (no-cache)
        run: |
          for f in index.html login.html patients.html; do
            if [ -f "out/$f" ]; then
              aws s3 cp "out/$f" "s3://${{ secrets.TARGET_BUCKET }}/" \
                --cache-control "no-cache, no-store, must-revalidate" \
                --content-type "text/html"
            fi
          done
          aws s3 cp "out/config.js" "s3://${{ secrets.TARGET_BUCKET }}/" \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "application/javascript"

      - name: Upload assets (long cache)
        run: |
          if [ -d "out/assets" ]; then
            aws s3 cp out/assets/ "s3://${{ secrets.TARGET_BUCKET }}/assets/" --recursive \
              --cache-control "max-age=31536000, immutable"
          fi

      - name: CloudFront invalidate
        run: |
          aws cloudfront create-invalidation --distribution-id "${{ secrets.CF_DIST_ID }}" --paths "/*"
